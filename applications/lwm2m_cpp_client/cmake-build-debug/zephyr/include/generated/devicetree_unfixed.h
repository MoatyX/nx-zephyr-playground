/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   qemu_x86.dts.pre.tmp
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /eeprom
 *   4   /flash@500000
 *   5   /memory@0
 *   6   /cpus
 *   7   /cpus/cpu@0
 *   8   /sim_flash
 *   9   /sim_flash/flash_sim@0
 *   10  /sim_flash/flash_sim@0/partitions
 *   11  /sim_flash/flash_sim@0/partitions/partition@1000
 *   12  /sim_flash/flash_sim@0/partitions/partition@11000
 *   13  /sim_flash/flash_sim@0/partitions/partition@21000
 *   14  /ioapic@fec00000
 *   15  /soc
 *   16  /soc/eth@febc0000
 *   17  /soc/hpet@fed00000
 *   18  /soc/uart@2f8
 *   19  /soc/uart@3f8
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_cpus) fn(DT_N_S_ioapic_fec00000) fn(DT_N_S_memory_0) fn(DT_N_S_soc) fn(DT_N_S_flash_500000) fn(DT_N_S_sim_flash) fn(DT_N_S_eeprom)

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /eeprom */ \
	4, /* /flash@500000 */ \
	5, /* /memory@0 */ \
	6, /* /cpus */ \
	8, /* /sim_flash */ \
	14, /* /ioapic@fec00000 */ \
	15, /* /soc */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_intel_ia32 DT_N

/* Special property macros: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_intel_ia32 1
#define DT_N_STATUS_okay 1

/* Generic property macros: */
#define DT_N_P_compatible {"intel,ia32"}
#define DT_N_P_compatible_IDX_0 "intel,ia32"
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Special property macros: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Special property macros: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /eeprom
 *
 * Node identifier: DT_N_S_eeprom
 *
 * Binding (compatible = zephyr,sim-eeprom):
 *   $ZEPHYR_BASE/dts/bindings/mtd/zephyr,sim-eeprom.yaml
 *
 * Description:
 *   Zephyr Simulated EEPROM device
 */

/* Node parent (/) identifier: */
#define DT_N_S_eeprom_PARENT DT_N
#define DT_N_S_eeprom_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_eeprom_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_eeprom_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_eeprom_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_eeprom_EXISTS 1
#define DT_N_ALIAS_eeprom_0           DT_N_S_eeprom
#define DT_N_INST_0_zephyr_sim_eeprom DT_N_S_eeprom
#define DT_N_NODELABEL_eeprom0        DT_N_S_eeprom

/* Special property macros: */
#define DT_N_S_eeprom_REG_NUM 0
#define DT_N_S_eeprom_IRQ_NUM 0
#define DT_N_S_eeprom_COMPAT_MATCHES_zephyr_sim_eeprom 1
#define DT_N_S_eeprom_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_eeprom_P_size 32768
#define DT_N_S_eeprom_P_size_EXISTS 1
#define DT_N_S_eeprom_P_read_only 0
#define DT_N_S_eeprom_P_read_only_EXISTS 1
#define DT_N_S_eeprom_P_label "EEPROM_0"
#define DT_N_S_eeprom_P_label_EXISTS 1
#define DT_N_S_eeprom_P_status "okay"
#define DT_N_S_eeprom_P_status_ENUM_IDX 1
#define DT_N_S_eeprom_P_status_EXISTS 1
#define DT_N_S_eeprom_P_compatible {"zephyr,sim-eeprom"}
#define DT_N_S_eeprom_P_compatible_IDX_0 "zephyr,sim-eeprom"
#define DT_N_S_eeprom_P_compatible_LEN 1
#define DT_N_S_eeprom_P_compatible_EXISTS 1

/*
 * Devicetree node: /flash@500000
 *
 * Node identifier: DT_N_S_flash_500000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * Description:
 *   Flash node
 */

/* Node parent (/) identifier: */
#define DT_N_S_flash_500000_PARENT DT_N
#define DT_N_S_flash_500000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_flash_500000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_flash_500000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_flash_500000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_flash_500000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_flash_500000
#define DT_N_NODELABEL_flash0    DT_N_S_flash_500000

/* Special property macros: */
#define DT_N_S_flash_500000_REG_NUM 1
#define DT_N_S_flash_500000_REG_IDX_0_EXISTS 1
#define DT_N_S_flash_500000_REG_IDX_0_VAL_ADDRESS 5242880 /* 0x500000 */
#define DT_N_S_flash_500000_REG_IDX_0_VAL_SIZE 4194304 /* 0x400000 */
#define DT_N_S_flash_500000_IRQ_NUM 0
#define DT_N_S_flash_500000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_flash_500000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_flash_500000_P_compatible {"soc-nv-flash"}
#define DT_N_S_flash_500000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_flash_500000_P_compatible_LEN 1
#define DT_N_S_flash_500000_P_compatible_EXISTS 1
#define DT_N_S_flash_500000_P_reg {5242880 /* 0x500000 */, 4194304 /* 0x400000 */}
#define DT_N_S_flash_500000_P_reg_IDX_0 5242880
#define DT_N_S_flash_500000_P_reg_IDX_1 4194304
#define DT_N_S_flash_500000_P_reg_EXISTS 1

/*
 * Devicetree node: /memory@0
 *
 * Node identifier: DT_N_S_memory_0
 */

/* Node parent (/) identifier: */
#define DT_N_S_memory_0_PARENT DT_N
#define DT_N_S_memory_0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_0_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_0_EXISTS 1
#define DT_N_NODELABEL_dram0 DT_N_S_memory_0

/* Special property macros: */
#define DT_N_S_memory_0_REG_NUM 1
#define DT_N_S_memory_0_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_memory_0_REG_IDX_0_VAL_SIZE 4194304 /* 0x400000 */
#define DT_N_S_memory_0_IRQ_NUM 0
#define DT_N_S_memory_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_0_P_reg {0 /* 0x0 */, 4194304 /* 0x400000 */}
#define DT_N_S_memory_0_P_reg_IDX_0 0
#define DT_N_S_memory_0_P_reg_IDX_1 4194304
#define DT_N_S_memory_0_P_reg_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	7, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Special property macros: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 */

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	6, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_qemu32 DT_N_S_cpus_S_cpu_0

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_qemu32 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"qemu32"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "qemu32"
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1

/*
 * Devicetree node: /sim_flash
 *
 * Node identifier: DT_N_S_sim_flash
 *
 * Binding (compatible = zephyr,sim-flash):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/zephyr,sim-flash.yaml
 *
 * Description:
 *   Simulated flash memory
 */

/* Node parent (/) identifier: */
#define DT_N_S_sim_flash_PARENT DT_N
#define DT_N_S_sim_flash_FOREACH_CHILD(fn) fn(DT_N_S_sim_flash_S_flash_sim_0)

/* Node's dependency ordinal: */
#define DT_N_S_sim_flash_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sim_flash_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sim_flash_SUPPORTS_ORDS \
	9, /* /sim_flash/flash_sim@0 */

/* Existence and alternate IDs: */
#define DT_N_S_sim_flash_EXISTS 1
#define DT_N_INST_0_zephyr_sim_flash DT_N_S_sim_flash
#define DT_N_NODELABEL_sim_flash     DT_N_S_sim_flash

/* Special property macros: */
#define DT_N_S_sim_flash_REG_NUM 0
#define DT_N_S_sim_flash_IRQ_NUM 0
#define DT_N_S_sim_flash_COMPAT_MATCHES_zephyr_sim_flash 1
#define DT_N_S_sim_flash_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_sim_flash_P_label "FLASH_SIMULATOR"
#define DT_N_S_sim_flash_P_label_EXISTS 1
#define DT_N_S_sim_flash_P_erase_value 255
#define DT_N_S_sim_flash_P_erase_value_EXISTS 1
#define DT_N_S_sim_flash_P_compatible {"zephyr,sim-flash"}
#define DT_N_S_sim_flash_P_compatible_IDX_0 "zephyr,sim-flash"
#define DT_N_S_sim_flash_P_compatible_LEN 1
#define DT_N_S_sim_flash_P_compatible_EXISTS 1

/*
 * Devicetree node: /sim_flash/flash_sim@0
 *
 * Node identifier: DT_N_S_sim_flash_S_flash_sim_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * Description:
 *   Flash node
 */

/* Node parent (/sim_flash) identifier: */
#define DT_N_S_sim_flash_S_flash_sim_0_PARENT DT_N_S_sim_flash
#define DT_N_S_sim_flash_S_flash_sim_0_FOREACH_CHILD(fn) fn(DT_N_S_sim_flash_S_flash_sim_0_S_partitions)

/* Node's dependency ordinal: */
#define DT_N_S_sim_flash_S_flash_sim_0_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sim_flash_S_flash_sim_0_REQUIRES_ORDS \
	8, /* /sim_flash */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sim_flash_S_flash_sim_0_SUPPORTS_ORDS \
	10, /* /sim_flash/flash_sim@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_sim_flash_S_flash_sim_0_EXISTS 1
#define DT_N_INST_1_soc_nv_flash  DT_N_S_sim_flash_S_flash_sim_0
#define DT_N_NODELABEL_flash_sim0 DT_N_S_sim_flash_S_flash_sim_0

/* Special property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_REG_NUM 1
#define DT_N_S_sim_flash_S_flash_sim_0_REG_IDX_0_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_sim_flash_S_flash_sim_0_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_sim_flash_S_flash_sim_0_IRQ_NUM 0
#define DT_N_S_sim_flash_S_flash_sim_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_sim_flash_S_flash_sim_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_P_erase_block_size 1024
#define DT_N_S_sim_flash_S_flash_sim_0_P_erase_block_size_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_P_write_block_size 4
#define DT_N_S_sim_flash_S_flash_sim_0_P_write_block_size_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_sim_flash_S_flash_sim_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_sim_flash_S_flash_sim_0_P_compatible_LEN 1
#define DT_N_S_sim_flash_S_flash_sim_0_P_compatible_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_P_reg {0 /* 0x0 */, 1048576 /* 0x100000 */}
#define DT_N_S_sim_flash_S_flash_sim_0_P_reg_IDX_0 0
#define DT_N_S_sim_flash_S_flash_sim_0_P_reg_IDX_1 1048576
#define DT_N_S_sim_flash_S_flash_sim_0_P_reg_EXISTS 1

/*
 * Devicetree node: /sim_flash/flash_sim@0/partitions
 *
 * Node identifier: DT_N_S_sim_flash_S_flash_sim_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * Description:
 *   Flash partitions parent node
 */

/* Node parent (/sim_flash/flash_sim@0) identifier: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_PARENT DT_N_S_sim_flash_S_flash_sim_0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000) fn(DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000) fn(DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000)

/* Node's dependency ordinal: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_REQUIRES_ORDS \
	9, /* /sim_flash/flash_sim@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_SUPPORTS_ORDS \
	11, /* /sim_flash/flash_sim@0/partitions/partition@1000 */ \
	12, /* /sim_flash/flash_sim@0/partitions/partition@11000 */ \
	13, /* /sim_flash/flash_sim@0/partitions/partition@21000 */

/* Existence and alternate IDs: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_sim_flash_S_flash_sim_0_S_partitions

/* Special property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_REG_NUM 0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_IRQ_NUM 0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /sim_flash/flash_sim@0/partitions/partition@1000
 *
 * Node identifier: DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000
 *
 * Description:
 *   Flash partition child node
 */

/* Node parent (/sim_flash/flash_sim@0/partitions) identifier: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_PARENT DT_N_S_sim_flash_S_flash_sim_0_S_partitions
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_REQUIRES_ORDS \
	10, /* /sim_flash/flash_sim@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000

/* Special property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_REG_NUM 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_REG_IDX_0_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_REG_IDX_0_VAL_ADDRESS 4096 /* 0x1000 */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_IRQ_NUM 0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_STATUS_okay 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_P_label "storage"
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_P_label_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_P_read_only 0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_P_read_only_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_P_reg {4096 /* 0x1000 */, 65536 /* 0x10000 */}
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_P_reg_IDX_0 4096
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_P_reg_IDX_1 65536
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000_P_reg_EXISTS 1

/*
 * Devicetree node: /sim_flash/flash_sim@0/partitions/partition@11000
 *
 * Node identifier: DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000
 *
 * Description:
 *   Flash partition child node
 */

/* Node parent (/sim_flash/flash_sim@0/partitions) identifier: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_PARENT DT_N_S_sim_flash_S_flash_sim_0_S_partitions
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_REQUIRES_ORDS \
	10, /* /sim_flash/flash_sim@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000

/* Special property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_REG_NUM 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_REG_IDX_0_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_REG_IDX_0_VAL_ADDRESS 69632 /* 0x11000 */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_IRQ_NUM 0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_STATUS_okay 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_P_label "image-0"
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_P_label_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_P_read_only 0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_P_read_only_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_P_reg {69632 /* 0x11000 */, 65536 /* 0x10000 */}
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_P_reg_IDX_0 69632
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_P_reg_IDX_1 65536
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000_P_reg_EXISTS 1

/*
 * Devicetree node: /sim_flash/flash_sim@0/partitions/partition@21000
 *
 * Node identifier: DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000
 *
 * Description:
 *   Flash partition child node
 */

/* Node parent (/sim_flash/flash_sim@0/partitions) identifier: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_PARENT DT_N_S_sim_flash_S_flash_sim_0_S_partitions
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_REQUIRES_ORDS \
	10, /* /sim_flash/flash_sim@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000

/* Special property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_REG_NUM 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_REG_IDX_0_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_REG_IDX_0_VAL_ADDRESS 135168 /* 0x21000 */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_IRQ_NUM 0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_STATUS_okay 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_P_label "image-1"
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_P_label_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_P_read_only 0
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_P_read_only_EXISTS 1
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_P_reg {135168 /* 0x21000 */, 65536 /* 0x10000 */}
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_P_reg_IDX_0 135168
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_P_reg_IDX_1 65536
#define DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000_P_reg_EXISTS 1

/*
 * Devicetree node: /ioapic@fec00000
 *
 * Node identifier: DT_N_S_ioapic_fec00000
 *
 * Binding (compatible = intel,ioapic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/intel,ioapic.yaml
 *
 * Description:
 *   Intel I/O Advanced Programmable Interrupt Controller (APIC)
 */

/* Node parent (/) identifier: */
#define DT_N_S_ioapic_fec00000_PARENT DT_N
#define DT_N_S_ioapic_fec00000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_ioapic_fec00000_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ioapic_fec00000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ioapic_fec00000_SUPPORTS_ORDS \
	16, /* /soc/eth@febc0000 */ \
	17, /* /soc/hpet@fed00000 */ \
	18, /* /soc/uart@2f8 */ \
	19, /* /soc/uart@3f8 */

/* Existence and alternate IDs: */
#define DT_N_S_ioapic_fec00000_EXISTS 1
#define DT_N_INST_0_intel_ioapic DT_N_S_ioapic_fec00000
#define DT_N_NODELABEL_intc      DT_N_S_ioapic_fec00000

/* Special property macros: */
#define DT_N_S_ioapic_fec00000_REG_NUM 1
#define DT_N_S_ioapic_fec00000_REG_IDX_0_EXISTS 1
#define DT_N_S_ioapic_fec00000_REG_IDX_0_VAL_ADDRESS 4273995776 /* 0xfec00000 */
#define DT_N_S_ioapic_fec00000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_ioapic_fec00000_IRQ_NUM 0
#define DT_N_S_ioapic_fec00000_COMPAT_MATCHES_intel_ioapic 1
#define DT_N_S_ioapic_fec00000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_ioapic_fec00000_P_reg {4273995776 /* 0xfec00000 */, 4096 /* 0x1000 */}
#define DT_N_S_ioapic_fec00000_P_reg_IDX_0 4273995776
#define DT_N_S_ioapic_fec00000_P_reg_IDX_1 4096
#define DT_N_S_ioapic_fec00000_P_reg_EXISTS 1
#define DT_N_S_ioapic_fec00000_P_interrupt_controller 1
#define DT_N_S_ioapic_fec00000_P_interrupt_controller_EXISTS 1
#define DT_N_S_ioapic_fec00000_P_compatible {"intel,ioapic"}
#define DT_N_S_ioapic_fec00000_P_compatible_IDX_0 "intel,ioapic"
#define DT_N_S_ioapic_fec00000_P_compatible_LEN 1
#define DT_N_S_ioapic_fec00000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_uart_3f8) fn(DT_N_S_soc_S_uart_2f8) fn(DT_N_S_soc_S_hpet_fed00000) fn(DT_N_S_soc_S_eth_febc0000)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	16, /* /soc/eth@febc0000 */ \
	17, /* /soc/hpet@fed00000 */ \
	18, /* /soc/uart@2f8 */ \
	19, /* /soc/uart@3f8 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Special property macros: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/eth@febc0000
 *
 * Node identifier: DT_N_S_soc_S_eth_febc0000
 *
 * Binding (compatible = intel,e1000):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/intel,e1000.yaml
 *
 * Description:
 *   Intel E1000 Ethernet controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_eth_febc0000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_eth_febc0000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_eth_febc0000_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_eth_febc0000_REQUIRES_ORDS \
	14, /* /ioapic@fec00000 */ \
	15, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_eth_febc0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_eth_febc0000_EXISTS 1
#define DT_N_INST_0_intel_e1000 DT_N_S_soc_S_eth_febc0000
#define DT_N_NODELABEL_eth0     DT_N_S_soc_S_eth_febc0000

/* Special property macros: */
#define DT_N_S_soc_S_eth_febc0000_REG_NUM 1
#define DT_N_S_soc_S_eth_febc0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_REG_IDX_0_VAL_ADDRESS 4273733632 /* 0xfebc0000 */
#define DT_N_S_soc_S_eth_febc0000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_eth_febc0000_IRQ_NUM 1
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_VAL_sense 256
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_VAL_sense_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_eth_febc0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_COMPAT_MATCHES_intel_e1000 1
#define DT_N_S_soc_S_eth_febc0000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_eth_febc0000_P_reg {4273733632 /* 0xfebc0000 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_eth_febc0000_P_reg_IDX_0 4273733632
#define DT_N_S_soc_S_eth_febc0000_P_reg_IDX_1 256
#define DT_N_S_soc_S_eth_febc0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_P_interrupts {11 /* 0xb */, 256 /* 0x100 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_eth_febc0000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_eth_febc0000_P_interrupts_IDX_1 256
#define DT_N_S_soc_S_eth_febc0000_P_interrupts_IDX_2 3
#define DT_N_S_soc_S_eth_febc0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_P_status "okay"
#define DT_N_S_soc_S_eth_febc0000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_eth_febc0000_P_status_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_P_compatible {"intel,e1000"}
#define DT_N_S_soc_S_eth_febc0000_P_compatible_IDX_0 "intel,e1000"
#define DT_N_S_soc_S_eth_febc0000_P_compatible_LEN 1
#define DT_N_S_soc_S_eth_febc0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_P_interrupt_parent_IDX_0_PH DT_N_S_ioapic_fec00000
#define DT_N_S_soc_S_eth_febc0000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_eth_febc0000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_eth_febc0000_P_label "eth0"
#define DT_N_S_soc_S_eth_febc0000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/hpet@fed00000
 *
 * Node identifier: DT_N_S_soc_S_hpet_fed00000
 *
 * Binding (compatible = intel,hpet):
 *   $ZEPHYR_BASE/dts/bindings/timer/intel,hpet.yaml
 *
 * Description:
 *   HPET (High-Precision Event Timer)
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_hpet_fed00000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_hpet_fed00000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_hpet_fed00000_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_hpet_fed00000_REQUIRES_ORDS \
	14, /* /ioapic@fec00000 */ \
	15, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_hpet_fed00000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_hpet_fed00000_EXISTS 1
#define DT_N_INST_0_intel_hpet DT_N_S_soc_S_hpet_fed00000
#define DT_N_NODELABEL_hpet    DT_N_S_soc_S_hpet_fed00000

/* Special property macros: */
#define DT_N_S_soc_S_hpet_fed00000_REG_NUM 1
#define DT_N_S_soc_S_hpet_fed00000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_REG_IDX_0_VAL_ADDRESS 4275044352 /* 0xfed00000 */
#define DT_N_S_soc_S_hpet_fed00000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_hpet_fed00000_IRQ_NUM 1
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_VAL_sense 0
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_VAL_sense_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_soc_S_hpet_fed00000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_COMPAT_MATCHES_intel_hpet 1
#define DT_N_S_soc_S_hpet_fed00000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_hpet_fed00000_P_reg {4275044352 /* 0xfed00000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_hpet_fed00000_P_reg_IDX_0 4275044352
#define DT_N_S_soc_S_hpet_fed00000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_hpet_fed00000_P_reg_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_P_interrupts {2 /* 0x2 */, 0 /* 0x0 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_hpet_fed00000_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_hpet_fed00000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_hpet_fed00000_P_interrupts_IDX_2 4
#define DT_N_S_soc_S_hpet_fed00000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_P_status "okay"
#define DT_N_S_soc_S_hpet_fed00000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_hpet_fed00000_P_status_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_P_compatible {"intel,hpet"}
#define DT_N_S_soc_S_hpet_fed00000_P_compatible_IDX_0 "intel,hpet"
#define DT_N_S_soc_S_hpet_fed00000_P_compatible_LEN 1
#define DT_N_S_soc_S_hpet_fed00000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_P_interrupt_parent_IDX_0_PH DT_N_S_ioapic_fec00000
#define DT_N_S_soc_S_hpet_fed00000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_hpet_fed00000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_hpet_fed00000_P_label "HPET"
#define DT_N_S_soc_S_hpet_fed00000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/uart@2f8
 *
 * Node identifier: DT_N_S_soc_S_uart_2f8
 *
 * Binding (compatible = ns16550):
 *   $ZEPHYR_BASE/dts/bindings/serial/ns16550.yaml
 *
 * Description:
 *   ns16550 UART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_2f8_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_2f8_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_2f8_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_2f8_REQUIRES_ORDS \
	14, /* /ioapic@fec00000 */ \
	15, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_2f8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_2f8_EXISTS 1
#define DT_N_ALIAS_uart_1    DT_N_S_soc_S_uart_2f8
#define DT_N_INST_1_ns16550  DT_N_S_soc_S_uart_2f8
#define DT_N_NODELABEL_uart1 DT_N_S_soc_S_uart_2f8

/* Special property macros: */
#define DT_N_S_soc_S_uart_2f8_REG_NUM 1
#define DT_N_S_soc_S_uart_2f8_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_REG_IDX_0_VAL_ADDRESS 760 /* 0x2f8 */
#define DT_N_S_soc_S_uart_2f8_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_uart_2f8_IRQ_NUM 1
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_VAL_sense 256
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_VAL_sense_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_uart_2f8_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_COMPAT_MATCHES_ns16550 1
#define DT_N_S_soc_S_uart_2f8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_uart_2f8_P_reg {760 /* 0x2f8 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_uart_2f8_P_reg_IDX_0 760
#define DT_N_S_soc_S_uart_2f8_P_reg_IDX_1 256
#define DT_N_S_soc_S_uart_2f8_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_pcie 0
#define DT_N_S_soc_S_uart_2f8_P_pcie_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_clock_frequency 1843200
#define DT_N_S_soc_S_uart_2f8_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_current_speed 115200
#define DT_N_S_soc_S_uart_2f8_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_label "UART_1"
#define DT_N_S_soc_S_uart_2f8_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_2f8_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_status "okay"
#define DT_N_S_soc_S_uart_2f8_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_2f8_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_compatible {"ns16550"}
#define DT_N_S_soc_S_uart_2f8_P_compatible_IDX_0 "ns16550"
#define DT_N_S_soc_S_uart_2f8_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_2f8_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_interrupts {3 /* 0x3 */, 256 /* 0x100 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_uart_2f8_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_uart_2f8_P_interrupts_IDX_1 256
#define DT_N_S_soc_S_uart_2f8_P_interrupts_IDX_2 3
#define DT_N_S_soc_S_uart_2f8_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_2f8_P_interrupt_parent_IDX_0_PH DT_N_S_ioapic_fec00000
#define DT_N_S_soc_S_uart_2f8_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_2f8_P_interrupt_parent_EXISTS 1

/*
 * Devicetree node: /soc/uart@3f8
 *
 * Node identifier: DT_N_S_soc_S_uart_3f8
 *
 * Binding (compatible = ns16550):
 *   $ZEPHYR_BASE/dts/bindings/serial/ns16550.yaml
 *
 * Description:
 *   ns16550 UART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3f8_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_3f8_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_3f8_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_3f8_REQUIRES_ORDS \
	14, /* /ioapic@fec00000 */ \
	15, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_3f8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3f8_EXISTS 1
#define DT_N_ALIAS_uart_0    DT_N_S_soc_S_uart_3f8
#define DT_N_INST_0_ns16550  DT_N_S_soc_S_uart_3f8
#define DT_N_NODELABEL_uart0 DT_N_S_soc_S_uart_3f8

/* Special property macros: */
#define DT_N_S_soc_S_uart_3f8_REG_NUM 1
#define DT_N_S_soc_S_uart_3f8_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_REG_IDX_0_VAL_ADDRESS 1016 /* 0x3f8 */
#define DT_N_S_soc_S_uart_3f8_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_uart_3f8_IRQ_NUM 1
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_VAL_sense 256
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_VAL_sense_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_uart_3f8_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_COMPAT_MATCHES_ns16550 1
#define DT_N_S_soc_S_uart_3f8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3f8_P_reg {1016 /* 0x3f8 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_uart_3f8_P_reg_IDX_0 1016
#define DT_N_S_soc_S_uart_3f8_P_reg_IDX_1 256
#define DT_N_S_soc_S_uart_3f8_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_pcie 0
#define DT_N_S_soc_S_uart_3f8_P_pcie_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_clock_frequency 1843200
#define DT_N_S_soc_S_uart_3f8_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_current_speed 115200
#define DT_N_S_soc_S_uart_3f8_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_label "UART_0"
#define DT_N_S_soc_S_uart_3f8_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_3f8_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_status "okay"
#define DT_N_S_soc_S_uart_3f8_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3f8_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_compatible {"ns16550"}
#define DT_N_S_soc_S_uart_3f8_P_compatible_IDX_0 "ns16550"
#define DT_N_S_soc_S_uart_3f8_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3f8_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_interrupts {4 /* 0x4 */, 256 /* 0x100 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_uart_3f8_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_uart_3f8_P_interrupts_IDX_1 256
#define DT_N_S_soc_S_uart_3f8_P_interrupts_IDX_2 3
#define DT_N_S_soc_S_uart_3f8_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_3f8_P_interrupt_parent_IDX_0_PH DT_N_S_ioapic_fec00000
#define DT_N_S_soc_S_uart_3f8_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_3f8_P_interrupt_parent_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_0
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_flash_500000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_uart_3f8
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_3f8
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_bt_uart                 DT_N_S_soc_S_uart_2f8
#define DT_CHOSEN_zephyr_bt_uart_EXISTS          1
#define DT_CHOSEN_zephyr_uart_pipe               DT_N_S_soc_S_uart_2f8
#define DT_CHOSEN_zephyr_uart_pipe_EXISTS        1
#define DT_CHOSEN_zephyr_bt_mon_uart             DT_N_S_soc_S_uart_2f8
#define DT_CHOSEN_zephyr_bt_mon_uart_EXISTS      1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_sim_flash
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_1000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_11000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_sim_flash_S_flash_sim_0_S_partitions_S_partition_21000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_intel_ia32 1
#define DT_COMPAT_HAS_OKAY_qemu32 1
#define DT_COMPAT_HAS_OKAY_intel_ioapic 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_ns16550 1
#define DT_COMPAT_HAS_OKAY_intel_hpet 1
#define DT_COMPAT_HAS_OKAY_intel_e1000 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_zephyr_sim_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_zephyr_sim_eeprom 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_intel_ia32_NUM_OKAY 1
#define DT_N_INST_qemu32_NUM_OKAY 1
#define DT_N_INST_intel_ioapic_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_ns16550_NUM_OKAY 2
#define DT_N_INST_intel_hpet_NUM_OKAY 1
#define DT_N_INST_intel_e1000_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 2
#define DT_N_INST_zephyr_sim_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_zephyr_sim_eeprom_NUM_OKAY 1
#define DT_FOREACH_OKAY_INST_intel_ia32(fn) fn(0)
#define DT_FOREACH_OKAY_INST_qemu32(fn) fn(0)
#define DT_FOREACH_OKAY_INST_intel_ioapic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_ns16550(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_intel_hpet(fn) fn(0)
#define DT_FOREACH_OKAY_INST_intel_e1000(fn) fn(0)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_zephyr_sim_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zephyr_sim_eeprom(fn) fn(0)

/*
 * Bus information for status "okay" nodes of each compatible
 */
